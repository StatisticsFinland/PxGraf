name: PxGraf Backend SonarScan

run-name: ${{ github.event_name == 'pull_request' &&
  format('Backend SonarScan for PR {0}', github.event.pull_request.number) || 
  format('Backend SonarScan for {0}', github.event.head_commit.message) }}

on:
  pull_request:
    branches:
      - 'dev'
  push:
    branches:
      - 'dev'

jobs:
 sonar_backend:
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
            distribution: 'zulu'
            java-version: '21'
      
      - name: Install SonarCloud scanner
        run: dotnet tool install -g dotnet-sonarscanner

      - name: Begin SonarScanner
        run: dotnet sonarscanner begin /k:statisticsfinland-github_pxgraf_backend
            /o:statisticsfinland-github
            /d:sonar.host.url=https://sonarcloud.io
            /d:sonar.token=${{ secrets.SONAR_TOKEN }}    
            /d:sonar.cs.vscoveragexml.reportsPaths=**/coverage.cobertura.xml
            /d:sonar.sources=./PxGraf/PxGraf
            /d:sonar.tests=./PxGraf/UnitTests

      - name: Run coverage test
        run: dotnet test --collect:"XPlat Code Coverage" --configuration Test --results-directory ./TestResults --logger trx

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with: 
          name: coverage-report
          path: ./TestResults
        
      - name: End SonarScanner
        run: dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}
